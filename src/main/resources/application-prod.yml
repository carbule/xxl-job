server:
  port: 8088

spring:
  datasource:
    # 数据库连接URL
    url: jdbc:postgresql://139.9.144.123:5432/workplace?charset=utf-8&sslmode=disable
    # 数据库用户名
    username: postgres
    # 数据库密码
    password: YouyaI@12345
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: org.postgresql.Driver
    druid:
      # 连接池初始化时创建的连接数
      initialSize: 5
      # 连接池中最大连接数
      maxActive: 50
      # 连接池中最小空闲连接数
      minIdle: 5
      # 连接池中最大空闲连接数(已弃用)
      #maxIdle: 10
      # 获取连接时的最大等待时间（毫秒）
      maxWait: 60000
      # 间隔多久检测一次空闲连接（毫秒）
      timeBetweenEvictionRunsMillis: 60000
      # 连接池中连接最小空闲时间（毫秒）
      minEvictableIdleTimeMillis: 300000
      # 用于检测连接是否有效的SQL语句
      validationQuery: SELECT 1
      # 是否开启空闲连接的检测
      testWhileIdle: true
      # 是否开启连接的检测功能，在获取连接时检测连接是否有效
      testOnBorrow: false
      # 是否开启连接的检测功能，在归还连接时检测连接是否有效
      testOnReturn: false
      # 是否缓存PreparedStatement对象
      poolPreparedStatements: true
      # 缓存PreparedStatement对象的最大数量
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计用的filter，允许监控统计
      filters: stat
      # 配置扩展属性，用于监控统计分析SQL性能等
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  data:
    redis:
      database: 0
      host: 116.63.160.129
      port: 6379
      password: YouyaI@12345
      lettuce:
        pool:
          max-active: 20 # 连接池最大连接数（使用负值表示没有限制）
          max-idle: 10 # 连接池中的最大空闲连接
          min-idle: 5 # 连接池中的最小空闲连接
          max-wait: 5000 # 连接池最大阻塞等待时间（使用负值表示没有限制）
      connect-timeout: 300 # 连接超时时间（毫秒）

  rabbitmq:
    addresses: 116.63.160.129:5672
    virtual-host: /
    publisher-confirm-type: correlated # 确认消息已发送到交换机(Exchange)
    publisher-returns: true  # 开启发送端消息抵达队列的确认
    template:
      mandatory: true
    username: yyadmin
    password: YouyaI@12345
    listener:
      simple:
        acknowledge-mode: manual

  neo4j:
    uri: neo4j://139.9.144.123:7687
    authentication:
      username: neo4j
      password: YouYai@12345
    pool:
      max-connection-pool-size: 2

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl

env_version: release

enterprise_qrcode_url: https://weichat.youyai.cn/?qrcodeId=

user_recharge_notify_url: https://tweichat.youyai.cn/workplace/user/rechargeNotify

enterprise_recharge_notify_url: https://tweichat.youyai.cn/workplace/enterprise/rechargeNotify

rabbitmq:
  normalProperties:
    hunt_job_bonus_allocation:
      #交换机名称
      exchangeName: hunt_job_bonus_allocation_exchange
      #队列名称
      queueName: hunt_job_bonus_allocation_queue
      #路由键
      routingKey: hunt_job_bonus_allocation_routing_key
      #消费者类型
      consumerType: huntJobBonusAllocation
    job_bonus_allocation:
      #交换机名称
      exchangeName: job_bonus_allocation_exchange
      #队列名称
      queueName: job_bonus_allocation_queue
      #路由键
      routingKey: job_bonus_allocation_routing_key
      #消费者类型
      consumerType: jobBonusAllocation
    hunt_job_sub_task:
      #交换机名称
      exchangeName: hunt_job_sub_task_exchange
      #队列名称
      queueName: hunt_job_sub_task_queue
      #路由键
      routingKey: hunt_job_sub_task_routing_key
      #消费者类型
      consumerType: huntJobSubTask
    job_sub_task:
      #交换机名称
      exchangeName: hjob_sub_task_exchange
      #队列名称
      queueName: job_sub_task_queue
      #路由键
      routingKey: job_sub_task_routing_key
      #消费者类型
      consumerType: jobSubTask
    sys_commission_payment:
      #交换机名称
      exchangeName: sys_commission_payment_exchange
      #队列名称
      queueName: sys_commission_payment_queue
      #路由键
      routingKey: sys_commission_payment_routing_key
      #消费者类型
      consumerType: sysCommissionPayment
  delayProperties:
    enterprise_qrcode:
      #交换机名称
      exchangeName: enterprise_qrcode_exchange
      #队列名称
      queueName: enterprise_qrcode_queue
      #路由键
      routingKey: enterprise_qrcode
      #消费者类型
      consumerType: enterpriseQrcode
    enterprise_shareImage:
      #交换机名称
      exchangeName: enterprise_shareImage_exchange
      #队列名称
      queueName: enterprise_shareImage_queue
      #路由键
      routingKey: enterprise_shareImage
      #消费者类型
      consumerType: enterpriseShareImage
    hunt_job_shareImage:
      #交换机名称
      exchangeName: hunt_job_shareImage_exchange
      #队列名称
      queueName: hunt_job_shareImage_queue
      #路由键
      routingKey: hunt_job_shareImage
      #消费者类型
      consumerType: huntJobShareImage
    job_shareImage:
      #交换机名称
      exchangeName: job_shareImage_exchange
      #队列名称
      queueName: job_shareImage_queue
      #路由键
      routingKey: job_shareImage
      #消费者类型
      consumerType: jobShareImage
    user_order_payment_inquiry:
      #交换机名称
      exchangeName: user_order_payment_inquiry_exchange
      #队列名称
      queueName: user_order_payment_inquiry_queue
      #路由键
      routingKey: user_order_payment_inquiry
      #消费者类型
      consumerType: userOrderPaymentInquiry
    enterprise_order_payment_inquiry:
      #交换机名称
      exchangeName: enterprise_order_payment_inquiry_exchange
      #队列名称
      queueName: enterprise_order_payment_inquiry_queue
      #路由键
      routingKey: enterprise_order_payment_inquiry
      #消费者类型
      consumerType: enterpriseOrderPaymentInquiry
    user_order_timeout:
      #交换机名称
      exchangeName: user_order_timeout_exchange
      #队列名称
      queueName: user_order_timeout_queue
      #路由键
      routingKey: user_order_timeout
      #消费者类型
      consumerType: userOrderTimeout
    enterprise_order_timeout:
      #交换机名称
      exchangeName: enterprise_order_timeout_exchange
      #队列名称
      queueName: enterprise_order_timeout_queue
      #路由键
      routingKey: enterprise_order_timeout
      #消费者类型
      consumerType: enterpriseOrderTimeout
    close_user_order:
      #交换机名称
      exchangeName: close_user_order_exchange
      #队列名称
      queueName: close_user_order_queue
      #路由键
      routingKey: close_user_order
      #消费者类型
      consumerType: closeUserOrder
    close_enterprise_order:
      #交换机名称
      exchangeName: close_enterprise_order_exchange
      #队列名称
      queueName: close_enterprise_order_queue
      #路由键
      routingKey: close_enterprise_order
      #消费者类型
      consumerType: closeEnterpriseOrder
    hunt_job_main_task:
      #交换机名称
      exchangeName: hunt_job_main_task_exchange
      #队列名称
      queueName: hunt_job_main_task_queue
      #路由键
      routingKey: hunt_job_main_task
      #消费者类型
      consumerType: huntJobMainTask
    job_main_task:
      #交换机名称
      exchangeName: job_main_task_exchange
      #队列名称
      queueName: job_main_task_queue
      #路由键
      routingKey: jobn_main_task
      #消费者类型
      consumerType: jobMainTask

wx:
  miniapp:
    configs:
      #微信小程序的appid
      - appid: wxac76b91987ca9f96
        #小程序appSecret
        secret: 280f7c2a134eb1577dfa0f75aed8a1b9
    message-subscribe-template:
      # 跳转小程序类型：developer为开发版；trial为体验版；formal为正式版；默认为正式版
      miniprogram-state: formal
      # 面试预约通知
      interview-appointment: SeMOeDcFsE7gxqqVYA7C323TAZNcVU5GLwF5WatVCzE
      # 面试通知
      interview: sxACbuPvDdatP1sMdsoC417W7zXvpsA_bm3HOEaMcEw
      # 入职通知
      onboarding: dLSuhK42KDerpZJBzYUWaUuP_KuMQma21GN-qklfE_8
      # 入职进度通知
      onboarding-progress: MVaZRKMV9Ay_dJh9fifN2VGtW_z5pr6aaXivQKBrOdg